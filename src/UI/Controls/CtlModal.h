///----------------------------------------------------------------------------------------------------
/// Copyright (c) Raidcore.GG - All rights reserved.
///
/// Name         :  CtlModal.h
/// Description  :  Contains the functionality for a modal dialog/window.
/// Authors      :  K. Bieniek
///----------------------------------------------------------------------------------------------------

#ifndef CONTROLS_MODAL_H
#define CONTROLS_MODAL_H

#include <string>

#include "imgui.h"

constexpr ImGuiWindowFlags ModalFlags
	= ImGuiWindowFlags_AlwaysAutoResize
	| ImGuiWindowFlags_NoResize
	| ImGuiWindowFlags_NoCollapse
	| ImGuiWindowFlags_NoMove;

///----------------------------------------------------------------------------------------------------
/// EModalResult Enumeration
///----------------------------------------------------------------------------------------------------
enum class EModalResult
{
	None,
	OK,
	Cancel
};

///----------------------------------------------------------------------------------------------------
/// IModal Interface Class
///----------------------------------------------------------------------------------------------------
class IModal
{
	public:
	///----------------------------------------------------------------------------------------------------
	/// Render:
	/// 	Render callback for the modal.
	/// 	Returns true when the modal closed.
	///----------------------------------------------------------------------------------------------------
	bool Render();

	///----------------------------------------------------------------------------------------------------
	/// GetName:
	/// 	Returns the name of the window.
	///----------------------------------------------------------------------------------------------------
	std::string GetName() const;

	///----------------------------------------------------------------------------------------------------
	/// GetID:
	/// 	Gets the ID of the modal.
	///----------------------------------------------------------------------------------------------------
	const std::string& GetID() const;

	///----------------------------------------------------------------------------------------------------
	/// GetDisplayName:
	/// 	Gets the display name of the modal.
	///----------------------------------------------------------------------------------------------------
	const std::string& GetDisplayName() const;

	///----------------------------------------------------------------------------------------------------
	/// GetResult:
	/// 	Gets the result of the modal.
	///----------------------------------------------------------------------------------------------------
	EModalResult GetResult() const;

	///----------------------------------------------------------------------------------------------------
	/// OpenModal:
	/// 	Notifies the modal that it should open next frame.
	///----------------------------------------------------------------------------------------------------
	void OpenModal();

	protected:
	///----------------------------------------------------------------------------------------------------
	/// SetID:
	/// 	Sets the ID of the modal.
	///----------------------------------------------------------------------------------------------------
	void SetID(std::string aID);

	///----------------------------------------------------------------------------------------------------
	/// SetDisplayName:
	/// 	Sets the display name of the modal.
	///----------------------------------------------------------------------------------------------------
	void SetDisplayName(std::string aDisplayName);

	///----------------------------------------------------------------------------------------------------
	/// SetResult:
	/// 	Sets the result of the modal.
	///----------------------------------------------------------------------------------------------------
	void SetResult(EModalResult aResult);

	///----------------------------------------------------------------------------------------------------
	/// Render:
	/// 	Callback for the modal contents.
	///----------------------------------------------------------------------------------------------------
	virtual void RenderContent() = 0;

	///----------------------------------------------------------------------------------------------------
	/// OnOpening:
	/// 	Callback on opening of the modal.
	///----------------------------------------------------------------------------------------------------
	virtual void OnOpening() { /* nop */ }

	///----------------------------------------------------------------------------------------------------
	/// OnClosing:
	/// 	Callback on closing of the modal.
	/// 	If the result is reset to EModalResult::None, the closing will be cancelled.
	///----------------------------------------------------------------------------------------------------
	virtual void OnClosing() { /* nop */ }

	private:
	std::string  ID;
	std::string  DisplayName;
	EModalResult Result              = EModalResult::None;
	bool         ShouldOpenNextFrame = false;
};

#endif
