///----------------------------------------------------------------------------------------------------
/// Copyright (c) Raidcore.GG - All rights reserved.
///
/// Name         :  LdrAddonBase.h
/// Description  :  Contains the interface definition for addons.
/// Authors      :  K. Bieniek
///----------------------------------------------------------------------------------------------------

#ifndef LDRADDONBASE_H
#define LDRADDONBASE_H

#include <cstdint>
#include <filesystem>
#include <windows.h>

#include "LdrChecksum.h"
#include "LdrEnum.h"

class IAddon;
class CLoaderBase;

typedef IAddon* (*IADDON_FACTORY)(std::filesystem::path aLocation);

///----------------------------------------------------------------------------------------------------
/// IAddon Interface Class
///----------------------------------------------------------------------------------------------------
class IAddon
{
	public:
	///----------------------------------------------------------------------------------------------------
	/// dtor
	///----------------------------------------------------------------------------------------------------
	virtual ~IAddon() = default;

	///----------------------------------------------------------------------------------------------------
	/// GetBase:
	/// 	Returns the base class of the addon.
	///----------------------------------------------------------------------------------------------------
	virtual IAddon* GetBase();

	///----------------------------------------------------------------------------------------------------
	/// GetSignature:
	/// 	Returns the unique signature of the addon.
	///----------------------------------------------------------------------------------------------------
	virtual uint32_t GetSignature() = 0;

	///----------------------------------------------------------------------------------------------------
	/// GetLocation:
	/// 	Returns the location of the addon.
	///----------------------------------------------------------------------------------------------------
	std::filesystem::path GetLocation() const;

	///----------------------------------------------------------------------------------------------------
	/// GetMD5:
	/// 	Returns the MD5 of the addon.
	///----------------------------------------------------------------------------------------------------
	MD5_t GetMD5() const;

	///----------------------------------------------------------------------------------------------------
	/// IsLoaded:
	/// 	Returns true, if the addon is loaded.
	///----------------------------------------------------------------------------------------------------
	bool IsLoaded() const;

	///----------------------------------------------------------------------------------------------------
	/// Load:
	/// 	Loads the addon.
	///----------------------------------------------------------------------------------------------------
	virtual void Load() = 0;
	
	///----------------------------------------------------------------------------------------------------
	/// Unload:
	/// 	Unloads the addon.
	///----------------------------------------------------------------------------------------------------
	virtual void Unload() = 0;
	
	///----------------------------------------------------------------------------------------------------
	/// Uninstall:
	/// 	Uninstalls the addon.
	///----------------------------------------------------------------------------------------------------
	virtual void Uninstall() = 0;

	///----------------------------------------------------------------------------------------------------
	/// OwnsAddress:
	/// 	Returns true, if the passed aAddress belongs to this addon.
	///----------------------------------------------------------------------------------------------------
	bool OwnsAddress(void* aAddress) const;

	protected:
	EAddonState           State       = EAddonState::None;
	std::filesystem::path Location;
	MD5_t                 MD5         = {};
	HMODULE               Module      = nullptr;
	size_t                ModuleSize  = 0;

	///----------------------------------------------------------------------------------------------------
	/// SetLocation:
	/// 	Sets a new location for the addon.
	///----------------------------------------------------------------------------------------------------
	void SetLocation(std::filesystem::path aLocation);

	friend class CLoaderBase;
};

#endif
